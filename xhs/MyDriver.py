import time
from selenium import webdriver
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
import json


class MyDriver():
    '''For login purpose, can store cookies for login nexttime
        login: 0: NOT recommended, possible login and verification needed when crawling data, causing interuption  1: Read the stored the cookie file only, NOT for first time usage   2: Recommended: get and store the cookie for next time usage, this requires to login manually.      More details to be seen in MyDriver.py'''
    def __init__(self, login = 2, browser = 'Chrome'):
        '''Chrome is strongly recommended'''
        if browser == 'Edge':
            self.driver = webdriver.Edge()
        elif browser == 'Firefox':
            self.driver = webdriver.Firefox()
        else:
            option = webdriver.ChromeOptions()
            option.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3")
            option.add_argument('--incognito')
            option.add_experimental_option('excludeSwitches', ['enable-logging'])
            # option.add_argument("--headless")  # Runs Chrome in headless mode
            option.add_argument("--disable-dev-shm-usage")  # Overcome limited resource problems
            option.add_argument("--disable-blink-features")
            option.add_argument("--disable-blink-features=AutomationControlled")
            self.driver = webdriver.Chrome(options= option)
            
        self.driver.implicitly_wait(10) 
        self.driver.maximize_window()
        if login == 1:
            self.readcookie()
        elif login == 2:
            self.getcookie()
            self.readcookie()
            
        
    def getcookie(self):
        '''scan the QR code (do 2FA verification) to login mannually'''

        self.driver.get('https://www.xiaohongshu.com')
        # url='https://www.jd.com/'
        #global > div.main-container > div.side-bar > ul > li.user.side-bar-component > div > a > span.channel
        print('Please login manually on the brower, max waiting time is 500s')
        time.sleep(3)
        self.driver.refresh()
        WebDriverWait(self.driver,500,poll_frequency=4).until(EC.presence_of_element_located((By.CSS_SELECTOR, '#global > div.main-container > div.side-bar > ul > li.user.side-bar-component')))
        # time.sleep(500)
        cookieList  = self.driver.get_cookies()
        cookieStr = json.dumps(cookieList)
        with open('xhscookie.txt', 'w') as f:
            f.write(cookieStr)
        print('cookie wriiten into file "xhscookie.txt"')

    def readcookie(self):
        '''if you have an file "Jdcookie.txt" generated by getcookie(), use this function to login.
            if you encounter some verification problem when logging in, just do it manually, the browser will wait for you to do so.'''
        self.driver.get('https://www.xiaohongshu.com')
        self.driver.refresh()
        try:
            with open('xhscookie.txt',mode='r',encoding='utf-8') as f:
                cookie = f.read()
            # from string format to dictionary in python
            cookie = json.loads(cookie)
            self.driver.delete_all_cookies()
            for item in cookie:
                time.sleep(0.4)
                self.driver.add_cookie(item)
            time.sleep(0.4)
        except:
            print('"xhscookie.txt" file does not exist, try to set the login_status to 2!')
        
    def close(self):
        self.driver.close()

